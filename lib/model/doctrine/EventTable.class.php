<?php

/**
 * EventTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class EventTable extends Doctrine_Table
{
  const CLASS_NAME = 'Event';

  public static function getInstance()
  {
    return Doctrine_Core::getTable(self::CLASS_NAME);
  }

//================================================================================================
// ■1. 参照系
//================================================================================================
  /**
   * 一覧取得
   */
  public function getList($placeId, $limit='0', $offset='0')
  {
    $q = Doctrine::getTable(self::CLASS_NAME)->addActiveQuery();
    $q->andWhere('place_id = ?',      $placeId);

    if($limit)
    {
      $q->limit($limit);
    }
    
    if($offset)
    {
      $q->offset($offset);
    }

    $q->addOrderBy('startdate DESC, year DESC'); 

    $ret_array = $q->fetchArray();

    return $ret_array;
  }

  /**
   * 全一覧取得
   */
  public function getAllList($type='place', $device='pc', $pid='')
  {
    $q = Doctrine::getTable(self::CLASS_NAME)->addActiveQuery();

    $q->andWhere('event_flag = 1');

    if($type=='current')
    {
      $q->andWhere('( startdate = ? OR (startdate <= ? AND enddate >= ?) )',  array(date("Y-m-d"), date("Y-m-d"), date("Y-m-d")));
    }
    elseif($type=='future')
    {
      $q->andWhere('startdate > ?', date("Y-m-d"));
    }
    elseif($type=='active')
    {
      $q->andWhere('( startdate = ? OR (startdate <= ? AND enddate >= ?) ) OR (startdate > ?)',  array(date("Y-m-d"), date("Y-m-d"), date("Y-m-d"), date("Y-m-d")));
    }
    elseif(strpos($type, 'flag') !== false)
    {
      $q->andWhere(sprintf('%s = 1', $type));
    }
    elseif(strpos($type, 'pref') !== false)
    {
      $id = str_replace('pref_','',$type);
      $q->andWhere('prefectureId = ?', $id);
    }
    elseif(strpos($type, 'year') !== false)
    {
      $year = str_replace('year_','',$type);
      $q->andWhere('startdate like ?', $year.'%');
    }
    elseif(strpos($type, 'place') !== false)
    {
      $place = str_replace('place_','',$type);
      $obj = Doctrine_Core::getTable('Place')->findOneByName($place);
      
      if($obj)
      {
        $pid = $obj->getId();
        $q->andWhere('( tags like ? OR place_id = ? )',  array( '%'.$place.'%', $pid ) );
      }
      else
      {
        $q->andWhere('tags like ?',  '%'.$place.'%');
      }
    }
    
    if($device!='pc')
    {
      $q->andWhere('startdate >= ?', date("Y-m-d H:i:s", strtotime("-6 month")));
    }
    
    $q->addOrderBy('startdate DESC, year DESC'); 

    $ret = $q->fetchArray();

    $ret_array = array();
    
    foreach($ret as $key => $value)
    {
//      if($type=='all'||$type=='current'||$type=='future'||$type=='active')
//      {
        $ret_array[] = $value;
//      }
//      else
//      {
//        $ret_array[$value['place_id']][] = $value;
//      }
    }

    return $ret_array;
  }

  /**
   * 全一覧取得
   */
  public function getAllList2($pid, $place)
  {
    $q = Doctrine::getTable(self::CLASS_NAME)->addActiveQuery();

    $q->andWhere('event_flag = 1');
    $q->andWhere('( tags like ? OR place_id = ? )',  array( '%'.$place.'%', $pid ) );
    $q->addOrderBy('startdate DESC, year DESC'); 

    $ret = $q->fetchArray();

    $ret_array = array();
    
    foreach($ret as $key => $value)
    {
      $ret_array[] = $value;
    }

    return $ret_array;
  }

  /**
   * タグ取得
   */
  public function getAllTags()
  {
    $q = Doctrine_Query::create()
          ->from(self::CLASS_NAME)
          ->select('tags')
         ;

    $q = Doctrine::getTable(self::CLASS_NAME)->addActiveQuery($q);
    $q->addGroupBy('tags'); 

    $ret = $q->fetchArray();

    $ret_array = array();
    
    foreach($ret as $key => $value)
    {
      $tags_array = explode(" ", $value['tags']);
      
      foreach($tags_array as $key2 => $tag)
      {
        if(!in_array($tag, $ret_array) && strlen($tag)>0)
        {
          $ret_array[] = $tag;
        }
      }
    }
    asort($ret_array);
    //echo "<pre>"; print_r($ret_array); echo "</pre>"; exit;

    return $ret_array;
  }

  /**
   * 件数取得
   */
  public function getCount($placeId)
  {
    $q = Doctrine::getTable(self::CLASS_NAME)->addActiveQuery();
    $q->andWhere('place_id = ?',      $placeId);

    $ret = $q->execute();
    return count($ret);
  }

  /**
   * 最新/最古年取得
   */
  public function getYear()
  {
    $q = Doctrine_Query::create()
          ->select('max(startDate) as max, min(startDate) as min')
          ->from(self::CLASS_NAME)
         ;

    $q = Doctrine::getTable(self::CLASS_NAME)->addActiveQuery($q);

    $ret = $q->fetchArray();

    $ret_array = array();
    
    if(isset($ret[0]))
    {
      $ret_array['max'] = substr($ret[0]['max'], 0, 4);
      $ret_array['min'] = substr($ret[0]['min'], 0, 4);
    }

    return $ret_array;
  }

  /**
   * 各種件数取得
   */
  public function getCountArray()
  {
    $ret_array              = array();
    $ret_array['year']      = array();
    $ret_array['area']      = array();
    $ret_array['place']     = array();
    $ret_array['category']  = array();

    $ret    = Doctrine::getTable(self::CLASS_NAME)->getAllList('all');
    $place  = Doctrine::getTable('Place')->getAllList();
    //echo "<pre>"; print_r($ret); echo "</pre>"; exit;

    foreach($ret as $key => $value)
    {
      // 全件
      if(!isset($ret_array['total']))   $ret_array['total'] = 1;
      else                              $ret_array['total']++;  

      // 年度
      $year = substr($value['startdate'],0,4);
      if(!isset($ret_array['year'][$year])) $ret_array['year'][$year] = 1;
      else                                  $ret_array['year'][$year]++;

      // スポット
      $place_name = (isset($place[$value['place_id']])) ? $place[$value['place_id']]['name'] : '';
      $tag_array = explode(' ', $value['tags']);
      
      if($place_name)
      {
        if(!isset($ret_array['place'][$place_name]))  $ret_array['place'][$place_name] = 1;
        else                                          $ret_array['place'][$place_name]++;
      }

      if(is_array($tag_array))
      {
        foreach($tag_array as $key2 => $value2)
        { 
          if($value2 == $place_name) continue;
          if(!isset($ret_array['place'][$value2]))  $ret_array['place'][$value2] = 1;
          else                                      $ret_array['place'][$value2]++;
        }
      }
      
      // エリア
      if($value['prefectureid']==1)
      {
        if(!isset($ret_array['area']['北海道'])) $ret_array['area']['北海道'] = 1;
        else                                     $ret_array['area']['北海道']++;  
      }
      elseif( 2<=$value['prefectureid'] && $value['prefectureid']<=7)
      {
        if(!isset($ret_array['area']['東北'])) $ret_array['area']['東北'] = 1;
        else                                   $ret_array['area']['東北']++;  
      }
      elseif( 8<=$value['prefectureid'] && $value['prefectureid']<=14) 
      {
        if(!isset($ret_array['area']['関東'])) $ret_array['area']['関東'] = 1;
        else                                   $ret_array['area']['関東']++;  
      }
      elseif(15<=$value['prefectureid'] && $value['prefectureid']<=23)
      {
        if(!isset($ret_array['area']['中部'])) $ret_array['area']['中部'] = 1;
        else                                   $ret_array['area']['中部']++;  
      }
      elseif(24<=$value['prefectureid'] && $value['prefectureid']<=30)
      {
        if(!isset($ret_array['area']['近畿'])) $ret_array['area']['近畿'] = 1;
        else                                   $ret_array['area']['近畿']++;  
      }
      elseif(31<=$value['prefectureid'] && $value['prefectureid']<=35)
      {
        if(!isset($ret_array['area']['中国'])) $ret_array['area']['中国'] = 1;
        else                                   $ret_array['area']['中国']++;  
      }
      elseif(36<=$value['prefectureid'] && $value['prefectureid']<=39)
      {
        if(!isset($ret_array['area']['四国'])) $ret_array['area']['四国'] = 1;
        else                                   $ret_array['area']['四国']++;  
      }
      elseif(40<=$value['prefectureid'] && $value['prefectureid']<=47)
      {
        if(!isset($ret_array['area']['九州・沖縄'])) $ret_array['area']['九州・沖縄'] = 1;
        else                                         $ret_array['area']['九州・沖縄']++;  
      }
      
      if(!isset($ret_array['pref'][$value['prefectureid']]))  $ret_array['pref'][$value['prefectureid']] = 1;
      else                                                    $ret_array['pref'][$value['prefectureid']]++;  
      
      // 開催中
      if($value['startdate']==date('Y-m-d')||($value['startdate']<=date('Y-m-d')&&$value['enddate'] >= date('Y-m-d')))
      {
        if(!isset($ret_array['date']['current'])) $ret_array['date']['current'] = 1;
        else                                      $ret_array['date']['current']++;  
      }
      elseif($value['startdate'] > date('Y-m-d'))
      {
        if(!isset($ret_array['date']['future'])) $ret_array['date']['future'] = 1;
        else                                     $ret_array['date']['future']++;  
      }
      elseif($value['startdate'] < date('Y-m-d') && $value['enddate'] < date('Y-m-d') )
      {
        if(!isset($ret_array['date']['past'])) $ret_array['date']['past'] = 1;
        else                                   $ret_array['date']['past']++;  
      }
      
      // カテゴリ
      if($value['flag_art']==1)
      {
        if(!isset($ret_array['category']['flag_art']))  $ret_array['category']['flag_art'] = 1;
        else                                            $ret_array['category']['flag_art']++;  
      }
      if($value['flag_product']==1)
      {
        if(!isset($ret_array['category']['flag_product']))  $ret_array['category']['flag_product'] = 1;
        else                                                $ret_array['category']['flag_product']++;  
      }
      if($value['flag_music']==1)
      {
        if(!isset($ret_array['category']['flag_music']))  $ret_array['category']['flag_music'] = 1;
        else                                            $ret_array['category']['flag_music']++;  
      }
      if($value['flag_dance']==1)
      {
        if(!isset($ret_array['category']['flag_dance']))  $ret_array['category']['flag_dance'] = 1;
        else                                            $ret_array['category']['flag_dance']++;  
      }
      if($value['flag_talk']==1)
      {
        if(!isset($ret_array['category']['flag_talk']))  $ret_array['category']['flag_talk'] = 1;
        else                                            $ret_array['category']['flag_talk']++;  
      }
      if($value['flag_food']==1)
      {
        if(!isset($ret_array['category']['flag_food']))  $ret_array['category']['flag_food'] = 1;
        else                                            $ret_array['category']['flag_food']++;  
      }
    }
    //echo "<pre>"; print_r($ret_array); echo "</pre>"; exit;

    return $ret_array;
  }

//================================================================================================
// ■クエリ
//================================================================================================
  /**
   * 有効データ抽出クエリ
   */
  public function addActiveQuery(Doctrine_Query $q = null)
  {
    if (is_null($q))
    {
      $q = Doctrine_Query::create()
        ->from(self::CLASS_NAME);
    }
 
    $q->andWhere('delete_flag = ?',    sfConfig::get('app_delete_flag_active'));
 
    return $q;
  }

}