<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('PlaceBack', 'doctrine');

/**
 * BasePlaceBack
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $companyid
 * @property string $name
 * @property integer $prefectureid
 * @property string $address
 * @property string $tel
 * @property string $fax
 * @property string $start_from
 * @property string $closedays
 * @property string $openhours
 * @property string $mail
 * @property string $url
 * @property string $twitter
 * @property string $twitter_widget_id
 * @property string $facebook
 * @property string $access
 * @property string $capacity
 * @property string $copy
 * @property string $memo
 * @property string $image
 * @property string $logo
 * @property float $latitude
 * @property float $longitude
 * @property string $accessurl
 * @property integer $link_flag
 * @property integer $flag_care
 * @property integer $flag_work
 * @property integer $flag_art
 * @property integer $flag_product
 * @property integer $flag_school
 * @property integer $flag_publication
 * @property integer $flag_food
 * @property integer $flag_dance
 * @property integer $flag_other
 * @property integer $flag_shop
 * @property string $onlineshop_url
 * @property integer $delete_flag
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * 
 * @method integer   getId()                Returns the current record's "id" value
 * @method integer   getCompanyid()         Returns the current record's "companyid" value
 * @method string    getName()              Returns the current record's "name" value
 * @method integer   getPrefectureid()      Returns the current record's "prefectureid" value
 * @method string    getAddress()           Returns the current record's "address" value
 * @method string    getTel()               Returns the current record's "tel" value
 * @method string    getFax()               Returns the current record's "fax" value
 * @method string    getStartFrom()         Returns the current record's "start_from" value
 * @method string    getClosedays()         Returns the current record's "closedays" value
 * @method string    getOpenhours()         Returns the current record's "openhours" value
 * @method string    getMail()              Returns the current record's "mail" value
 * @method string    getUrl()               Returns the current record's "url" value
 * @method string    getTwitter()           Returns the current record's "twitter" value
 * @method string    getTwitterWidgetId()   Returns the current record's "twitter_widget_id" value
 * @method string    getFacebook()          Returns the current record's "facebook" value
 * @method string    getAccess()            Returns the current record's "access" value
 * @method string    getCapacity()          Returns the current record's "capacity" value
 * @method string    getCopy()              Returns the current record's "copy" value
 * @method string    getMemo()              Returns the current record's "memo" value
 * @method string    getImage()             Returns the current record's "image" value
 * @method string    getLogo()              Returns the current record's "logo" value
 * @method float     getLatitude()          Returns the current record's "latitude" value
 * @method float     getLongitude()         Returns the current record's "longitude" value
 * @method string    getAccessurl()         Returns the current record's "accessurl" value
 * @method integer   getLinkFlag()          Returns the current record's "link_flag" value
 * @method integer   getFlagCare()          Returns the current record's "flag_care" value
 * @method integer   getFlagWork()          Returns the current record's "flag_work" value
 * @method integer   getFlagArt()           Returns the current record's "flag_art" value
 * @method integer   getFlagProduct()       Returns the current record's "flag_product" value
 * @method integer   getFlagSchool()        Returns the current record's "flag_school" value
 * @method integer   getFlagPublication()   Returns the current record's "flag_publication" value
 * @method integer   getFlagFood()          Returns the current record's "flag_food" value
 * @method integer   getFlagDance()         Returns the current record's "flag_dance" value
 * @method integer   getFlagOther()         Returns the current record's "flag_other" value
 * @method integer   getFlagShop()          Returns the current record's "flag_shop" value
 * @method string    getOnlineshopUrl()     Returns the current record's "onlineshop_url" value
 * @method integer   getDeleteFlag()        Returns the current record's "delete_flag" value
 * @method timestamp getCreatedAt()         Returns the current record's "created_at" value
 * @method timestamp getUpdatedAt()         Returns the current record's "updated_at" value
 * @method PlaceBack setId()                Sets the current record's "id" value
 * @method PlaceBack setCompanyid()         Sets the current record's "companyid" value
 * @method PlaceBack setName()              Sets the current record's "name" value
 * @method PlaceBack setPrefectureid()      Sets the current record's "prefectureid" value
 * @method PlaceBack setAddress()           Sets the current record's "address" value
 * @method PlaceBack setTel()               Sets the current record's "tel" value
 * @method PlaceBack setFax()               Sets the current record's "fax" value
 * @method PlaceBack setStartFrom()         Sets the current record's "start_from" value
 * @method PlaceBack setClosedays()         Sets the current record's "closedays" value
 * @method PlaceBack setOpenhours()         Sets the current record's "openhours" value
 * @method PlaceBack setMail()              Sets the current record's "mail" value
 * @method PlaceBack setUrl()               Sets the current record's "url" value
 * @method PlaceBack setTwitter()           Sets the current record's "twitter" value
 * @method PlaceBack setTwitterWidgetId()   Sets the current record's "twitter_widget_id" value
 * @method PlaceBack setFacebook()          Sets the current record's "facebook" value
 * @method PlaceBack setAccess()            Sets the current record's "access" value
 * @method PlaceBack setCapacity()          Sets the current record's "capacity" value
 * @method PlaceBack setCopy()              Sets the current record's "copy" value
 * @method PlaceBack setMemo()              Sets the current record's "memo" value
 * @method PlaceBack setImage()             Sets the current record's "image" value
 * @method PlaceBack setLogo()              Sets the current record's "logo" value
 * @method PlaceBack setLatitude()          Sets the current record's "latitude" value
 * @method PlaceBack setLongitude()         Sets the current record's "longitude" value
 * @method PlaceBack setAccessurl()         Sets the current record's "accessurl" value
 * @method PlaceBack setLinkFlag()          Sets the current record's "link_flag" value
 * @method PlaceBack setFlagCare()          Sets the current record's "flag_care" value
 * @method PlaceBack setFlagWork()          Sets the current record's "flag_work" value
 * @method PlaceBack setFlagArt()           Sets the current record's "flag_art" value
 * @method PlaceBack setFlagProduct()       Sets the current record's "flag_product" value
 * @method PlaceBack setFlagSchool()        Sets the current record's "flag_school" value
 * @method PlaceBack setFlagPublication()   Sets the current record's "flag_publication" value
 * @method PlaceBack setFlagFood()          Sets the current record's "flag_food" value
 * @method PlaceBack setFlagDance()         Sets the current record's "flag_dance" value
 * @method PlaceBack setFlagOther()         Sets the current record's "flag_other" value
 * @method PlaceBack setFlagShop()          Sets the current record's "flag_shop" value
 * @method PlaceBack setOnlineshopUrl()     Sets the current record's "onlineshop_url" value
 * @method PlaceBack setDeleteFlag()        Sets the current record's "delete_flag" value
 * @method PlaceBack setCreatedAt()         Sets the current record's "created_at" value
 * @method PlaceBack setUpdatedAt()         Sets the current record's "updated_at" value
 * 
 * @package    gifted
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePlaceBack extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('place_back');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('companyid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('name', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('prefectureid', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('address', 'string', 512, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 512,
             ));
        $this->hasColumn('tel', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('fax', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('start_from', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('closedays', 'string', 512, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 512,
             ));
        $this->hasColumn('openhours', 'string', 512, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 512,
             ));
        $this->hasColumn('mail', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('url', 'string', 512, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 512,
             ));
        $this->hasColumn('twitter', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('twitter_widget_id', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 100,
             ));
        $this->hasColumn('facebook', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('access', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('capacity', 'string', 512, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 512,
             ));
        $this->hasColumn('copy', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('memo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('image', 'string', 512, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 512,
             ));
        $this->hasColumn('logo', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('latitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('longitude', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('accessurl', 'string', 256, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 256,
             ));
        $this->hasColumn('link_flag', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('flag_care', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_work', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_art', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_product', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_school', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_publication', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_food', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_dance', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_other', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('flag_shop', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 2,
             ));
        $this->hasColumn('onlineshop_url', 'string', 500, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 500,
             ));
        $this->hasColumn('delete_flag', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0',
             'notnull' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}